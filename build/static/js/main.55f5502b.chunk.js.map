{"version":3,"sources":["components/images/baking.jpg","components/images/christmas.jpg","components/images/clams.jpg","components/images/cocktail.jpg","components/images/dfo.jpg","components/images/kitchen.jpg","react-auth0-spa.js","components/Home.js","components/Page.js","components/Recipe.js","components/PrivateRoute.js","components/NavBar.js","components/Contents.js","utils/history.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","Auth0Provider","children","onRedirectCallback","initOptions","useState","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","useEffect","a","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","console","error","Provider","value","getIdTokenClaims","loginWithRedirect","getTokenSilently","getTokenWithPopup","logout","Home","className","src","baking","alt","christmas","clams","cocktail","dfo","kitchen","Page","this","props","name","content","Component","Ingredients","ingredients","map","item","quantity","servings","time","tags","Instructions","instructions","image","Recipe","intro","remarks","picture","renderContent","PrivateRoute","component","path","rest","targetUrl","fn","render","NavBar","log","origin","onClick","redirect_uri","returnTo","to","Contents","recipeLinks","recipes","recipe","style","textDecoration","recipeRoutes","action","type","createBrowserHistory","App","setRecipes","Tabletop","init","key","callback","data","Responses","elements","forEach","Title","Tags","split","Span","Description","Remarks","Volume","Directions","chapter","Designation","Image_Link","replace","Components","match","simpleSheet","parseNumbers","exact","Boolean","hostname","ReactDOM","domain","config","client_id","clientId","push","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.55f5502b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/baking.213a4951.jpg\";","module.exports = __webpack_public_path__ + \"static/media/christmas.664a4a34.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clams.fdbc979f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cocktail.a76fa84a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dfo.1924043d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kitchen.4db4526e.jpg\";","// src/react-auth0-spa.js\nimport React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes(\"code=\") &&\n          window.location.search.includes(\"state=\")) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};","import React from \"react\";\nimport './Home.css';\nimport baking from './images/baking.jpg';\nimport christmas from './images/christmas.jpg';\nimport clams from './images/clams.jpg';\nimport cocktail from './images/cocktail.jpg';\nimport dfo from './images/dfo.jpg';\nimport kitchen from './images/kitchen.jpg';\n\n\nexport default function Home() {\n  return (\n    <div className=\"Home\">\n      <div className='row' >\n        <div className='col'><img src={baking} alt={baking}/></div>\n        <div className='col'><img src={christmas} alt={christmas}/></div>\n        <div className='col'><img src={clams} alt={clams}/></div>\n      </div>\n      <h1>The Gloop Collection</h1>\n      <div className='row'>\n        <div className='col'><img src={cocktail} alt={cocktail}/></div>\n        <div className='col'><img src={dfo} alt={dfo}/></div>\n        <div className='col'><img src={kitchen} alt={kitchen}/></div>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nexport default class Page extends Component {\n  render() {\n    return (\n      <div className=\"Page\">\n        <h1> {this.props.name} </h1>\n        { this.props.content }\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Page from './Page'\nimport './Recipe.css'\n\nfunction Ingredients(props) {\n  const ingredients = props.content.map((item) =>\n    <li>{`${item.name} ${item.quantity}`}</li>\n  );\n  const servings = `Serves: ${props.servings ? props.servings : ''}`;\n  const time = `Time: ${props.time ? props.time : ''}`;\n  const tags = `Tags: ${props.tags ? props.tags : ''}`;\n  return (\n    <div className='column'>\n    <h4>{servings}</h4>\n    <h4>{time}</h4>\n    <h4>{tags}</h4>\n      <h2>{'Ingredients'}</h2>\n      <ul>\n        {\n          ingredients\n        }\n      </ul>\n    </div>\n  )\n}\n\nfunction Instructions(props) {\n  const instructions = props.instructions.map((item) => <li>{item}</li>);\n  const imge = props.image;\n  return (\n    <div className='column'>\n      <h2>{'Instructions'}</h2>\n      <ol>\n        {instructions}\n      </ol>\n    </div>\n  )\n}\n\nexport default class Recipe extends Component {\n  renderContent() {\n    return (\n      <div>\n        <p>{this.props.intro}</p>\n        <p>{this.props.remarks}</p>\n        <img src={this.props.image} alt={this.props.image} />\n        <img src={this.props.picture} alt={this.props.picture} />\n        <div className='row'>\n          <Ingredients content={this.props.ingredients} servings={this.props.servings} time={this.props.time} tags={this.props.tags}/>\n          <Instructions instructions={this.props.instructions} image={this.props.image}/>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"Recipe\">\n        <Page name={this.props.name} content={this.renderContent()} />\n      </div>\n    );\n  }\n}\n","// src/components/PrivateRoute.js\n\nimport React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\n  const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\n\n  useEffect(() => {\n    if (loading || isAuthenticated) {\n      return;\n    }\n    const fn = async () => {\n      await loginWithRedirect({\n        appState: {targetUrl: window.location.pathname}\n      });\n    };\n    fn();\n  }, [loading, isAuthenticated, loginWithRedirect, path]);\n\n  const render = props =>\n    isAuthenticated === true ? <Component {...props} /> : null;\n\n  return <Route path={path} render={render} {...rest} />;\n};\n\nexport default PrivateRoute;\n","// src/components/NavBar.js\n\nimport React from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = () => {\n  const { isAuthenticated, loginWithRedirect, logout } = useAuth0();\n  console.log(window.location.origin)\n  return (\n    <div>\n      {!isAuthenticated && (\n        <button onClick={() => loginWithRedirect({ redirect_uri: `${window.location.origin}/Contents` })}>Login</button>\n      )}\n      {isAuthenticated && <button onClick={() => logout({ returnTo: window.location.origin })}>Logout</button>}\n      {isAuthenticated && (\n        <span>\n          <Link to=\"/\">Home</Link>&nbsp;\n          <Link to=\"/Contents\">Contents</Link>\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default NavBar;","import React from \"react\";\nimport {\n  Switch,\n  Link\n} from \"react-router-dom\";\nimport Recipe from './Recipe'\nimport './Contents.css'\nimport PrivateRoute from \"./PrivateRoute\";\nimport NavBar from \"./NavBar\";\n\nexport default function Contents(props) {\n  const recipeLinks = props.recipes.map(\n    (recipe) =>\n      <li>\n        <Link\n          to={`/${recipe.name}`}\n          style={{ textDecoration: 'none' }}\n        >\n          {recipe.name}\n        </Link>\n      </li>\n\n  );\n\n  const recipeRoutes = props.recipes.map(\n    (recipe) =>\n      {\n        const path = `/${recipe.name}`;\n        const component = () => <Recipe {...recipe}></Recipe>\n        return (\n          <PrivateRoute\n            path={path}\n            component={component}\n          ></PrivateRoute>)\n      }\n  );\n\n  return (\n    <div>\n      <header>\n          <NavBar/>\n      </header>\n      <div>\n        <Switch>\n          <PrivateRoute\n            path={\"/Contents\"}\n          >\n          {\n            <div>\n              <div>\n                <ol>{recipeLinks}</ol>\n              </div>\n              <div>\n              <form action=\"https://docs.google.com/forms/d/e/1FAIpQLSc0iCXAFZ6UH9n3vkWnfvyRWebUiMDkug1Ls5MMHkEZ-AekYg/viewform\">\n                <input type=\"submit\" value=\"Add a New Recipe\" />\n              </form>\n              </div>\n            </div>\n          }\n          </PrivateRoute>\n          {recipeRoutes}\n        </Switch>\n      </div>\n    </div>\n  );\n}\n","import {\n  createBrowserHistory\n} from \"history\";\nexport default createBrowserHistory();","// https://docs.google.com/spreadsheets/d/e/2PACX-1vSDlXkDTivQ5hcGkcFJzsBpZOVZKoeJakcpkHnfERns96CKHoVeWyrgpsomZzYfGEC8NhrgEGmOgUdW/pubhtml\n\nimport React, { useState, useEffect } from 'react';\nimport { useAuth0 } from \"./react-auth0-spa\";\nimport {\n  Router,\n  Route\n} from \"react-router-dom\";\nimport Tabletop from 'tabletop';\nimport Home from './components/Home'\nimport Contents from './components/Contents'\nimport history from \"./utils/history\";\nimport './App.css';\n\nfunction App() {\n  const [recipes, setRecipes] = useState([]);\n  const { loading } = useAuth0();\n\n  useEffect(() => {\n    Tabletop.init({\n      key: 'https://docs.google.com/spreadsheets/d/1xxwUBoZ1bm2O_0eX4Ltz5P9SDq8-XiCQIM28VdOtOAU/edit?usp=sharing',\n      callback: data =>\n        {\n          var recipes = data.Responses.elements;\n\n          // Attach instructions & ingredients to recipes.\n          recipes.forEach(\n            recipe => {\n              recipe.name = recipe.Title;\n              recipe.tags = recipe.Tags.split(\";\");\n              recipe.time = recipe.Span;\n              recipe.intro = recipe.Description;\n              recipe.remarks = recipe.Remarks;\n              recipe.servings = recipe.Volume;\n              recipe.instructions = recipe.Directions.split(\";\");\n              recipe.chapter = recipe.Designation;\n              recipe.image = recipe.Image_Link;\n              recipe.remarks = recipe.Remarks;\n              recipe.intro = recipe.Description;\n              recipe.picture = recipe['Visual representation'].replace('open?', 'uc?export=view&');\n              recipe.ingredients = recipe.Components.split(\";\").map(item =>\n                {\n                  const name = item.match(/(.*?)(?![^(])/g);\n                  const quantity = item.match(/\\(([^()]+)\\)/);\n                  return {\n                    name: name ? name[0] : '',\n                    quantity: quantity ? quantity[0] : '',\n                  }\n                }\n              );\n            }\n          );\n          setRecipes(recipes)\n        },\n      simpleSheet: false,\n      parseNumbers: true\n    })\n  }, [])\n\n  if (loading) {\n    return <div > Loading... </div>;\n  } else {\n    return (\n      <div>\n        <div className=\"App\">\n          <Router history={history}>\n            <Route exact path={\"/\"}><Home/></Route>\n            <Contents recipes={recipes}/>\n          </Router>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Auth0Provider } from \"./react-auth0-spa\";\nimport config from \"./auth_config.json\";\nimport history from \"./utils/history\";\n\n// A function that routes the user to the right place\n// after login\nconst onRedirectCallback = appState => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nReactDOM.render(\n  <Auth0Provider\n    domain={config.domain}\n    client_id={config.clientId}\n    redirect_uri={window.location.origin}\n    onRedirectCallback={onRedirectCallback}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}